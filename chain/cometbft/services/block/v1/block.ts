// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: cometbft/services/block/v1/block.proto

/* eslint-disable */
import Long from "long";
import _m0 from "protobufjs/minimal";
import { Block } from "../../../types/v1/block";
import { BlockID } from "../../../types/v1/types";

/** GetByHeightRequest is a request for a block at the specified height. */
export interface GetByHeightRequest {
  /** The height of the block requested. */
  height: string;
}

/** GetByHeightResponse contains the block ID and the block at the specified height. */
export interface GetByHeightResponse {
  block_id: BlockID | undefined;
  block: Block | undefined;
}

/** GetLatestHeightRequest - empty message since no parameter is required */
export interface GetLatestHeightRequest {
}

/** GetLatestHeightResponse provides the height of the latest committed block. */
export interface GetLatestHeightResponse {
  /**
   * The height of the latest committed block. Will be 0 if no data has been
   * committed yet.
   */
  height: string;
}

function createBaseGetByHeightRequest(): GetByHeightRequest {
  return { height: "0" };
}

export const GetByHeightRequest = {
  $type: "cometbft.services.block.v1.GetByHeightRequest" as const,

  encode(message: GetByHeightRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.height !== "0") {
      writer.uint32(8).int64(message.height);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetByHeightRequest {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetByHeightRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.height = longToString(reader.int64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetByHeightRequest {
    return { height: isSet(object.height) ? globalThis.String(object.height) : "0" };
  },

  toJSON(message: GetByHeightRequest): unknown {
    const obj: any = {};
    if (message.height !== undefined) {
      obj.height = message.height;
    }
    return obj;
  },

  create(base?: DeepPartial<GetByHeightRequest>): GetByHeightRequest {
    return GetByHeightRequest.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetByHeightRequest>): GetByHeightRequest {
    const message = createBaseGetByHeightRequest();
    message.height = object.height ?? "0";
    return message;
  },
};

function createBaseGetByHeightResponse(): GetByHeightResponse {
  return { block_id: undefined, block: undefined };
}

export const GetByHeightResponse = {
  $type: "cometbft.services.block.v1.GetByHeightResponse" as const,

  encode(message: GetByHeightResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.block_id !== undefined) {
      BlockID.encode(message.block_id, writer.uint32(10).fork()).ldelim();
    }
    if (message.block !== undefined) {
      Block.encode(message.block, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetByHeightResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetByHeightResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.block_id = BlockID.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.block = Block.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetByHeightResponse {
    return {
      block_id: isSet(object.block_id) ? BlockID.fromJSON(object.block_id) : undefined,
      block: isSet(object.block) ? Block.fromJSON(object.block) : undefined,
    };
  },

  toJSON(message: GetByHeightResponse): unknown {
    const obj: any = {};
    if (message.block_id !== undefined) {
      obj.block_id = BlockID.toJSON(message.block_id);
    }
    if (message.block !== undefined) {
      obj.block = Block.toJSON(message.block);
    }
    return obj;
  },

  create(base?: DeepPartial<GetByHeightResponse>): GetByHeightResponse {
    return GetByHeightResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetByHeightResponse>): GetByHeightResponse {
    const message = createBaseGetByHeightResponse();
    message.block_id = (object.block_id !== undefined && object.block_id !== null)
      ? BlockID.fromPartial(object.block_id)
      : undefined;
    message.block = (object.block !== undefined && object.block !== null) ? Block.fromPartial(object.block) : undefined;
    return message;
  },
};

function createBaseGetLatestHeightRequest(): GetLatestHeightRequest {
  return {};
}

export const GetLatestHeightRequest = {
  $type: "cometbft.services.block.v1.GetLatestHeightRequest" as const,

  encode(_: GetLatestHeightRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetLatestHeightRequest {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetLatestHeightRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(_: any): GetLatestHeightRequest {
    return {};
  },

  toJSON(_: GetLatestHeightRequest): unknown {
    const obj: any = {};
    return obj;
  },

  create(base?: DeepPartial<GetLatestHeightRequest>): GetLatestHeightRequest {
    return GetLatestHeightRequest.fromPartial(base ?? {});
  },
  fromPartial(_: DeepPartial<GetLatestHeightRequest>): GetLatestHeightRequest {
    const message = createBaseGetLatestHeightRequest();
    return message;
  },
};

function createBaseGetLatestHeightResponse(): GetLatestHeightResponse {
  return { height: "0" };
}

export const GetLatestHeightResponse = {
  $type: "cometbft.services.block.v1.GetLatestHeightResponse" as const,

  encode(message: GetLatestHeightResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {
    if (message.height !== "0") {
      writer.uint32(8).int64(message.height);
    }
    return writer;
  },

  decode(input: _m0.Reader | Uint8Array, length?: number): GetLatestHeightResponse {
    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetLatestHeightResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 8) {
            break;
          }

          message.height = longToString(reader.int64() as Long);
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skipType(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetLatestHeightResponse {
    return { height: isSet(object.height) ? globalThis.String(object.height) : "0" };
  },

  toJSON(message: GetLatestHeightResponse): unknown {
    const obj: any = {};
    if (message.height !== undefined) {
      obj.height = message.height;
    }
    return obj;
  },

  create(base?: DeepPartial<GetLatestHeightResponse>): GetLatestHeightResponse {
    return GetLatestHeightResponse.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<GetLatestHeightResponse>): GetLatestHeightResponse {
    const message = createBaseGetLatestHeightResponse();
    message.height = object.height ?? "0";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function longToString(long: Long) {
  return long.toString();
}

if (_m0.util.Long !== Long) {
  _m0.util.Long = Long as any;
  _m0.configure();
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
