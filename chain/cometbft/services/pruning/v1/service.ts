// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: cometbft/services/pruning/v1/service.proto

/* eslint-disable */
import { grpc } from "@improbable-eng/grpc-web";
import { BrowserHeaders } from "browser-headers";
import {
  GetBlockIndexerRetainHeightRequest,
  GetBlockIndexerRetainHeightResponse,
  GetBlockResultsRetainHeightRequest,
  GetBlockResultsRetainHeightResponse,
  GetBlockRetainHeightRequest,
  GetBlockRetainHeightResponse,
  GetTxIndexerRetainHeightRequest,
  GetTxIndexerRetainHeightResponse,
  SetBlockIndexerRetainHeightRequest,
  SetBlockIndexerRetainHeightResponse,
  SetBlockResultsRetainHeightRequest,
  SetBlockResultsRetainHeightResponse,
  SetBlockRetainHeightRequest,
  SetBlockRetainHeightResponse,
  SetTxIndexerRetainHeightRequest,
  SetTxIndexerRetainHeightResponse,
} from "./pruning";

/**
 * PruningService provides privileged access to specialized pruning
 * functionality on the CometBFT node to help control node storage.
 */
export interface PruningService {
  /**
   * SetBlockRetainHeightRequest indicates to the node that it can safely
   * prune all block data up to the specified retain height.
   *
   * The lower of this retain height and that set by the application in its
   * Commit response will be used by the node to determine which heights' data
   * can be pruned.
   */
  SetBlockRetainHeight(
    request: DeepPartial<SetBlockRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockRetainHeightResponse>;
  /**
   * GetBlockRetainHeight returns information about the retain height
   * parameters used by the node to influence block retention/pruning.
   */
  GetBlockRetainHeight(
    request: DeepPartial<GetBlockRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockRetainHeightResponse>;
  /**
   * SetBlockResultsRetainHeightRequest indicates to the node that it can
   * safely prune all block results data up to the specified height.
   *
   * The node will always store the block results for the latest height to
   * help facilitate crash recovery.
   */
  SetBlockResultsRetainHeight(
    request: DeepPartial<SetBlockResultsRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockResultsRetainHeightResponse>;
  /**
   * GetBlockResultsRetainHeight returns information about the retain height
   * parameters used by the node to influence block results retention/pruning.
   */
  GetBlockResultsRetainHeight(
    request: DeepPartial<GetBlockResultsRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockResultsRetainHeightResponse>;
  /**
   * SetTxIndexerRetainHeightRequest indicates to the node that it can safely
   * prune all tx indices up to the specified retain height.
   */
  SetTxIndexerRetainHeight(
    request: DeepPartial<SetTxIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetTxIndexerRetainHeightResponse>;
  /**
   * GetTxIndexerRetainHeight returns information about the retain height
   * parameters used by the node to influence TxIndexer pruning
   */
  GetTxIndexerRetainHeight(
    request: DeepPartial<GetTxIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetTxIndexerRetainHeightResponse>;
  /**
   * SetBlockIndexerRetainHeightRequest indicates to the node that it can safely
   * prune all block indices up to the specified retain height.
   */
  SetBlockIndexerRetainHeight(
    request: DeepPartial<SetBlockIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockIndexerRetainHeightResponse>;
  /**
   * GetBlockIndexerRetainHeight returns information about the retain height
   * parameters used by the node to influence BlockIndexer pruning
   */
  GetBlockIndexerRetainHeight(
    request: DeepPartial<GetBlockIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockIndexerRetainHeightResponse>;
}

export class PruningServiceClientImpl implements PruningService {
  private readonly rpc: Rpc;

  constructor(rpc: Rpc) {
    this.rpc = rpc;
    this.SetBlockRetainHeight = this.SetBlockRetainHeight.bind(this);
    this.GetBlockRetainHeight = this.GetBlockRetainHeight.bind(this);
    this.SetBlockResultsRetainHeight = this.SetBlockResultsRetainHeight.bind(this);
    this.GetBlockResultsRetainHeight = this.GetBlockResultsRetainHeight.bind(this);
    this.SetTxIndexerRetainHeight = this.SetTxIndexerRetainHeight.bind(this);
    this.GetTxIndexerRetainHeight = this.GetTxIndexerRetainHeight.bind(this);
    this.SetBlockIndexerRetainHeight = this.SetBlockIndexerRetainHeight.bind(this);
    this.GetBlockIndexerRetainHeight = this.GetBlockIndexerRetainHeight.bind(this);
  }

  SetBlockRetainHeight(
    request: DeepPartial<SetBlockRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceSetBlockRetainHeightDesc,
      SetBlockRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  GetBlockRetainHeight(
    request: DeepPartial<GetBlockRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceGetBlockRetainHeightDesc,
      GetBlockRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  SetBlockResultsRetainHeight(
    request: DeepPartial<SetBlockResultsRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockResultsRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceSetBlockResultsRetainHeightDesc,
      SetBlockResultsRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  GetBlockResultsRetainHeight(
    request: DeepPartial<GetBlockResultsRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockResultsRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceGetBlockResultsRetainHeightDesc,
      GetBlockResultsRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  SetTxIndexerRetainHeight(
    request: DeepPartial<SetTxIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetTxIndexerRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceSetTxIndexerRetainHeightDesc,
      SetTxIndexerRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  GetTxIndexerRetainHeight(
    request: DeepPartial<GetTxIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetTxIndexerRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceGetTxIndexerRetainHeightDesc,
      GetTxIndexerRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  SetBlockIndexerRetainHeight(
    request: DeepPartial<SetBlockIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<SetBlockIndexerRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceSetBlockIndexerRetainHeightDesc,
      SetBlockIndexerRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }

  GetBlockIndexerRetainHeight(
    request: DeepPartial<GetBlockIndexerRetainHeightRequest>,
    metadata?: grpc.Metadata,
  ): Promise<GetBlockIndexerRetainHeightResponse> {
    return this.rpc.unary(
      PruningServiceGetBlockIndexerRetainHeightDesc,
      GetBlockIndexerRetainHeightRequest.fromPartial(request),
      metadata,
    );
  }
}

export const PruningServiceDesc = { serviceName: "cometbft.services.pruning.v1.PruningService" };

export const PruningServiceSetBlockRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "SetBlockRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return SetBlockRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = SetBlockRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceGetBlockRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "GetBlockRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return GetBlockRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = GetBlockRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceSetBlockResultsRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "SetBlockResultsRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return SetBlockResultsRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = SetBlockResultsRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceGetBlockResultsRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "GetBlockResultsRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return GetBlockResultsRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = GetBlockResultsRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceSetTxIndexerRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "SetTxIndexerRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return SetTxIndexerRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = SetTxIndexerRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceGetTxIndexerRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "GetTxIndexerRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return GetTxIndexerRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = GetTxIndexerRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceSetBlockIndexerRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "SetBlockIndexerRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return SetBlockIndexerRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = SetBlockIndexerRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

export const PruningServiceGetBlockIndexerRetainHeightDesc: UnaryMethodDefinitionish = {
  methodName: "GetBlockIndexerRetainHeight",
  service: PruningServiceDesc,
  requestStream: false,
  responseStream: false,
  requestType: {
    serializeBinary() {
      return GetBlockIndexerRetainHeightRequest.encode(this).finish();
    },
  } as any,
  responseType: {
    deserializeBinary(data: Uint8Array) {
      const value = GetBlockIndexerRetainHeightResponse.decode(data);
      return {
        ...value,
        toObject() {
          return value;
        },
      };
    },
  } as any,
};

interface UnaryMethodDefinitionishR extends grpc.UnaryMethodDefinition<any, any> {
  requestStream: any;
  responseStream: any;
}

type UnaryMethodDefinitionish = UnaryMethodDefinitionishR;

interface Rpc {
  unary<T extends UnaryMethodDefinitionish>(
    methodDesc: T,
    request: any,
    metadata: grpc.Metadata | undefined,
  ): Promise<any>;
}

export class GrpcWebImpl {
  private host: string;
  private options: {
    transport?: grpc.TransportFactory;

    debug?: boolean;
    metadata?: grpc.Metadata;
    upStreamRetryCodes?: number[];
  };

  constructor(
    host: string,
    options: {
      transport?: grpc.TransportFactory;

      debug?: boolean;
      metadata?: grpc.Metadata;
      upStreamRetryCodes?: number[];
    },
  ) {
    this.host = host;
    this.options = options;
  }

  unary<T extends UnaryMethodDefinitionish>(
    methodDesc: T,
    _request: any,
    metadata: grpc.Metadata | undefined,
  ): Promise<any> {
    const request = { ..._request, ...methodDesc.requestType };
    const maybeCombinedMetadata = metadata && this.options.metadata
      ? new BrowserHeaders({ ...this.options?.metadata.headersMap, ...metadata?.headersMap })
      : metadata ?? this.options.metadata;
    return new Promise((resolve, reject) => {
      grpc.unary(methodDesc, {
        request,
        host: this.host,
        metadata: maybeCombinedMetadata ?? {},
        ...(this.options.transport !== undefined ? { transport: this.options.transport } : {}),
        debug: this.options.debug ?? false,
        onEnd: function (response) {
          if (response.status === grpc.Code.OK) {
            resolve(response.message!.toObject());
          } else {
            const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);
            reject(err);
          }
        },
      });
    });
  }
}

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

export class GrpcWebError extends globalThis.Error {
  constructor(message: string, public code: grpc.Code, public metadata: grpc.Metadata) {
    super(message);
  }
}
